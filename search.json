[{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/articles/Dataframes.html","id":"dataframes","dir":"Articles","previous_headings":"","what":"Dataframes","title":"Dataframes","text":"common pattern reading tabular document data source populating class instances . ’re coming Rust may familiar something like serde sort task. RS, fairly easy create multiple class instances table JSON similar source. can simply use !!! operator pass list fields initialising class: makes simple create multiple instances data-frame, example: like tidyverse, even simpler: now list Asset classes ready use. can course thing data source can store R lists, common one might JSON example.","code":"library(RS)  Class(     \"Asset\",      # FIELDS     id       = t_char,     company  = t_char,     type     = t_char,     price    = t_dbl,     quantity = t_int,      # METHODS     value = function(.self) {         .self@price * .self@quantity     },     print = function(.self) {         cat(\"Asset ID:\", .self@id, \"\\n\")         cat(\"Name:\", .self@company, \"\\n\")         cat(\"Type:\", .self@type, \"\\n\")         cat(\"Price:\", .self@price, \"\\n\")         cat(\"Quantity:\", .self@quantity, \"\\n\")         cat(\"Total Value:\", .self@value(), \"\\n\")     } ) fields <- list(     id = \"AAPL\",     company = \"Apple Inc.\",     type = \"Equity\",     price = 150.0,     quantity = 10L )  asset <- Asset(!!!fields)  asset@print() Asset ID: AAPL Name: Apple Inc. Type: Equity Price: 150 Quantity: 10 Total Value: 1500 df <- data.frame(     id       = c(\"AAPL\", \"GOOGL\", \"AMZN\"),     company  = c(\"Apple Inc.\", \"Alphabet Inc.\", \"Amazon.com Inc.\"),     type     = c(\"Equity\", \"Equity\", \"Equity\"),     price    = c(150.0, 2800.0, 3400.0),     quantity = c(10L, 5L, 2L) )  assets <- lapply(seq_len(nrow(df)), \\(i) Asset(!!!df[i, ])) assets <- purrr::pmap(df, Asset) Asset ID: AAPL Name: Apple Inc. Type: Equity Price: 150 Quantity: 10 Total Value: 1500  Asset ID: GOOGL Name: Alphabet Inc. Type: Equity Price: 2800 Quantity: 5 Total Value: 14000  Asset ID: AMZN Name: Amazon.com Inc. Type: Equity Price: 3400 Quantity: 2 Total Value: 6800"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/articles/Types.html","id":"types","dir":"Articles","previous_headings":"","what":"Types","title":"Types","text":"RS provides number types meant used defining class. initialising class instance, must provide type matches given validator. Note t_any catch-type skips validation single field. pass incorrect value field, get error like: can also turn validation entirely class via: gives significant performance boost cost type validation.","code":"library(RS)  Class(     \"Foo\",      a = t_any,     b = t_int,     c = t_char,     d = t_dataframe,     e = t_date, ) foo <- Foo(     a = raw(1),      b = 1L,      c = \"c\",      d = data.frame(),      e = as.Date(\"2025-01-01\") ) foo <- Foo(     a = raw(1),      b = 1L,      c = \"c\",      d = data.frame(),      e = list()        ## Should be a t_date ) \"Invalid type <'list'> passed for field <'e'>.\" Class(     \"Foo\",     .validation = FALSE, ## Add this here       a = t_any,     b = t_int,     c = t_char,     d = t_dataframe,     e = t_date, )"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amando Z. Maintainer.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Z (2025). RS: Fast classes R. R package version 0.0.0.9000, https://github.com/avhz/RS/.","code":"@Manual{,   title = {RS: Fast classes for R},   author = {Amando Z},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/avhz/RS/}, }"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/index.html","id":"rs---faster-classes-for-r","dir":"","previous_headings":"","what":"Fast classes for R","title":"Fast classes for R","text":"name RS combination : R S languages (S R’s predecessor). .rs - file extension used Rust files, TLD Rust websites.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Fast classes for R","text":"following work:","code":"pak::pak(\"avhz/RS\") ## or renv::install(\"avhz/RS\") ## or devtools::install_github(\"avhz/RS\")"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Fast classes for R","text":"Note fields special objects like t_int, t_char, etc. objects allow attribute type validation. pass incorrect type one fields, get error like: used slot operator @ accessing attributes RS, common $ operator pervasive R code wanted operator made obvious object RS class, rather list, dataframe, environment, R6 class, etc. Note: Inheritance currently supported likely won’t unless overwhelming demand . Instead, composition supported preferred.","code":"Class(     \"Dog\",       # Fields     name  = t_char,     age   = t_int,     breed = t_char,       # Methods     bark = function(.self) cat(.self@name, \"goes woof!\\n\") )   fluffy <- Dog(name = \"Fluffy\", age = 3L, breed = \"Golden Retriever\") fluffy <- Dog(name = 1, age = 3L, breed = \"Golden Retriever\") \"Invalid type <'double'> passed for field <'name'>.\" > fluffy@name [1] \"Fluffy\" > fluffy@age [1] 3 > fluffy@breed [1] \"Golden Retriever\" > fluffy@bark() Fluffy goes woof!"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/index.html","id":"benchmarks","dir":"","previous_headings":"","what":"Benchmarks","title":"Fast classes for R","text":"following shows iterations per second class instances number R OOP libraries.  Note #1: libraries may provide features currently mature/complete offerings, particular R6. Note #2: creating Python class instances via reticulate inside R interpreter significantly slower directly Python. Python classes still much, much faster RS package (~30-40x faster last checked).","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/Class.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a new RS class. — Class","title":"Define a new RS class. — Class","text":"Create new ClassInstance R.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/Class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a new RS class. — Class","text":"","code":"Class(.classname, ..., .validate = TRUE)"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/Class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a new RS class. — Class","text":".classname name class. ... fields methods class definition. .validate Whether validate class attributes. Note: setting FALSE gives decent performance boost.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/Class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a new RS class. — Class","text":"Class function creates new ClassInstance R. allows define fields methods class.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/RS-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RS: Fast classes for R — RS-package","title":"RS: Fast classes for R — RS-package","text":"Fast classes R, written Rust.","code":""},{"path":[]},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/RSTypes.html","id":null,"dir":"Reference","previous_headings":"","what":"RS types for validation of RS class attributes. — RSTypes","title":"RS types for validation of RS class attributes. — RSTypes","text":"Supported types RS classes include: t_any t_date, t_dates t_int, t_ints t_dbl, t_dbls t_num, t_nums t_char, t_chars t_bool, t_bools t_cplx, t_cplxs t_raw, t_raws t_factor, t_factors t_list t_array t_vector t_matrix t_dataframe t_hashtab t_environment t_pairlist t_func t_expr t_call t_sym t_lang t_obj t_prim Note scalar vector versions types, t_int t_ints. former allows single scalar integer, latter matches vector integers. also catch-type t_any, match value, useful cases want allow type value field, still validating fields, .e. .validation = TRUE (default).","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/RSTypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RS types for validation of RS class attributes. — RSTypes","text":"","code":"t_any(.)  t_date(.)  t_dates(.)  t_int(.)  t_ints(.)  t_dbl(.)  t_dbls(.)  t_num(.)  t_nums(.)  t_char(.)  t_chars(.)  t_bool(.)  t_bools(.)  t_cplx(.)  t_cplxs(.)  t_raw(.)  t_raws(.)  t_factor(.)  t_factors(.)  t_list()  t_array()  t_vector(.)  t_matrix()  t_dataframe(x)  t_hashtab(x)  t_environment()  t_pairlist()  t_func()  t_expr()  t_call()  t_sym()  t_lang()  t_obj()  t_prim(x)"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/RSTypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RS types for validation of RS class attributes. — RSTypes","text":"new type object can used validation RS classes.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/RSTypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RS types for validation of RS class attributes. — RSTypes","text":"","code":"t_any #> function (.)  #> TRUE #> <bytecode: 0x55d6f4db3758> #> <environment: namespace:RS> #> attr(,\"class\") #> [1] \"ClassType\" \"t_any\"     t_date #> function (.)  #> .is_date(.) && length(.) == 1L #> <bytecode: 0x55d6f4df6038> #> <environment: namespace:RS> #> attr(,\"class\") #> [1] \"ClassType\" \"t_date\"    t_ints #> function (.)  #> is.integer(.) && length(.) > 1L #> <bytecode: 0x55d6f4e20150> #> <environment: namespace:RS> #> attr(,\"class\") #> [1] \"ClassType\" \"t_ints\"    t_dataframe #> function (x)  #> inherits(x, \"data.frame\") #> <bytecode: 0x55d6f4e56550> #> <environment: namespace:base> #> attr(,\"class\") #> [1] \"ClassType\"   \"t_dataframe\""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/private.html","id":null,"dir":"Reference","previous_headings":"","what":"Declare a method or attribute as private. — private","title":"Declare a method or attribute as private. — private","text":"Declare method attribute private.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/private.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Declare a method or attribute as private. — private","text":"","code":"private(.attr)"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/private.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Declare a method or attribute as private. — private","text":".attr function attribute declared private.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/private.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Declare a method or attribute as private. — private","text":"private function used declare method attribute private class definition. Private methods attributes accessible outside class.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/static.html","id":null,"dir":"Reference","previous_headings":"","what":"Declare a method is a static method. — static","title":"Declare a method is a static method. — static","text":"Declare method static method.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/static.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Declare a method is a static method. — static","text":"","code":"static(.attr)"},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/static.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Declare a method is a static method. — static","text":".attr function declared static method.","code":""},{"path":"https://github.com/avhz/RS/, https://avhz.github.io/RS/reference/static.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Declare a method is a static method. — static","text":"static function used declare method static method class definition. Static methods refer self, .e. first argument instance class.","code":""}]
