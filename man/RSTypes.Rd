% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/types.R
\name{RSTypes}
\alias{RSTypes}
\alias{t_any}
\alias{t_date}
\alias{t_dates}
\alias{t_int}
\alias{t_ints}
\alias{t_dbl}
\alias{t_dbls}
\alias{t_num}
\alias{t_nums}
\alias{t_char}
\alias{t_chars}
\alias{t_bool}
\alias{t_bools}
\alias{t_cplx}
\alias{t_cplxs}
\alias{t_raw}
\alias{t_raws}
\alias{t_factor}
\alias{t_factors}
\alias{t_list}
\alias{t_array}
\alias{t_vector}
\alias{t_matrix}
\alias{t_dataframe}
\alias{t_hashtab}
\alias{t_environment}
\alias{t_pairlist}
\alias{t_func}
\alias{t_expr}
\alias{t_call}
\alias{t_sym}
\alias{t_lang}
\alias{t_obj}
\alias{t_prim}
\title{RS types for validation of RS class attributes.}
\usage{
t_any()

t_date()

t_dates()

t_int()

t_ints()

t_dbl()

t_dbls()

t_num()

t_nums()

t_char()

t_chars()

t_bool()

t_bools()

t_cplx()

t_cplxs()

t_raw()

t_raws()

t_factor()

t_factors()

t_list()

t_array()

t_vector()

t_matrix()

t_dataframe()

t_hashtab()

t_environment()

t_pairlist()

t_func()

t_expr()

t_call()

t_sym()

t_lang()

t_obj()

t_prim()
}
\value{
A new type object that can be used for validation in RS classes.
}
\description{
Supported types for RS classes include:
\itemize{
\item \code{t_any}
\item \code{t_date}, \code{t_dates}
\item \code{t_int}, \code{t_ints}
\item \code{t_dbl}, \code{t_dbls}
\item \code{t_num}, \code{t_nums}
\item \code{t_char}, \code{t_chars}
\item \code{t_bool}, \code{t_bools}
\item \code{t_cplx}, \code{t_cplxs}
\item \code{t_raw}, \code{t_raws}
\item \code{t_factor}, \code{t_factors}
\item \code{t_list}
\item \code{t_array}
\item \code{t_vector}
\item \code{t_matrix}
\item \code{t_dataframe}
\item \code{t_hashtab}
\item \code{t_environment}
\item \code{t_pairlist}
\item \code{t_func}
\item \code{t_expr}
\item \code{t_call}
\item \code{t_sym}
\item \code{t_lang}
\item \code{t_obj}
\item \code{t_prim}
}

Note that there are scalar and vector versions of some types,
such as \code{t_int} and \code{t_ints}.
The former allows for a single scalar integer,
while the latter matches a vector of integers.

There is also the catch-all type \code{t_any},
which will match any value, and is useful for cases where
you want to allow any type of value for a field,
while still validating the other fields,
i.e. when \code{.validation = TRUE} (the default).
}
\examples{

t_any
t_date
t_ints
t_dataframe
}
